from aiogram.types import Message, CallbackQuery
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from src.presentation.bot.utils.fsm import ProductAddState
from src.infrastructure.services import product_service
from src.infrastructure.services import logger
from src.presentation.bot.utils.formatters import format_product_message, format_categories
from src.presentation.bot.utils.keyboard import build_product_actions_keyboard

# ================= –î–û–ë–ê–í–ò–¢–¨ –¢–û–í–ê–† ================= #

# 1Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"
async def add_product_request(message: Message, state: FSMContext):
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/add_product".

    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã "/add_product" –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä.
    - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –≤ "waiting_for_url", —á—Ç–æ–±—ã –æ–∂–∏–¥–∞—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è URL —Ç–æ–≤–∞—Ä–∞.
    - –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É "/add_product".
    - state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–æ—Ç–∞ –≤ –¥–∏–∞–ª–æ–≥–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    '''
    await message.answer("üì¶ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Ozon")
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è URL —Ç–æ–≤–∞—Ä–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º FSM, –º–æ–∂–Ω–æ —ç—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥)
    await state.set_state(ProductAddState.waiting_for_url)
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç URL —Ç–æ–≤–∞—Ä–∞
    await message.answer("‚è≥ –ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞—á–∞–ª—Å—è, –æ–∂–∏–¥–∞–π—Ç–µ...")

async def add_product_process(message: Message, state: FSMContext):
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è URL —Ç–æ–≤–∞—Ä–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º—É.

    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç URL —Ç–æ–≤–∞—Ä–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –±–æ—Ç–∞ (–ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã "/add_product").
    –û–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω—É–∂–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–æ–∂–∏–¥–∞–Ω–∏–µ URL —Ç–æ–≤–∞—Ä–∞).
    - –ü–∞—Ä—Å–∏—Ç URL –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ create_product.
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, —Ü–µ–Ω–∞ —Å –∫–∞—Ä—Ç–æ–π –∏ –±–µ–∑.
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã.
    - –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ URL —Ç–æ–≤–∞—Ä–∞.
    - state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–æ—Ç–∞.
    '''
    if not await state.get_state() == ProductAddState.waiting_for_url:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    
    url = message.text.strip()
    try:
        result = product_service.create_product(str(message.from_user.id), url)
        await message.answer(
            f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {result['product_name']}\n"
            f"–¶–µ–Ω–∞ —Å –∫–∞—Ä—Ç–æ–π: {result['with_card']} ‚ÇΩ\n"
            f"–¶–µ–Ω–∞ –±–µ–∑ –∫–∞—Ä—Ç—ã: {result['without_card']} ‚ÇΩ",
            reply_markup=build_product_actions_keyboard(result['product_id'], result['link'])
        )
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# ================= –ü–û–õ–£–ß–ò–¢–¨ –°–ü–ò–°–û–ö –¢–û–í–ê–†–û–í ================= #

async def get_my_product_list(message: Message):
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–≤–æ–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.
    –û–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ `product_service.get_all_products()`.
    - –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
    - –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä—ã –µ—Å—Ç—å, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ—ë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫, –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞,
      –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏.    
    '''
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        products = product_service.get_all_products(str(message.from_user.id))
        # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç
        if not products:
            await message.answer('üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤')
            return
        
        inline_keyboard = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫

        # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
        for p in products: 
            name = p.get('name') or p.get('product_name') or p.get('id')
            display = name if len(name) <= 60 else name[:57] + '...'
            # –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ = –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
            inline_keyboard.append([InlineKeyboardButton(text=display, callback_data=f"product:{p['id']}")])

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∂–¥–∞—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É)
        kb = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await message.answer("üìã –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:", reply_markup=kb)

    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤')
        await message.answer(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        
async def handle_product_button(call: CallbackQuery):
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç–æ–≤–∞—Ä–∞.

    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Ç–æ–≤–∞—Ä–æ–º –≤ —Å–ø–∏—Å–∫–µ.
    –û–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å "–∑–∞–ª–∏–ø–∞–Ω–∏—è" –∫–Ω–æ–ø–∫–∏.
    - –ò–∑–≤–ª–µ–∫–∞–µ—Ç ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ callback_data –∏ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ —á–µ—Ä–µ–∑ `product_service.get_full_product()`.
    - –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    - –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - call (CallbackQuery): –î–∞–Ω–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ –∏ ID —Ç–æ–≤–∞—Ä–∞.

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫, –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞,
      –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏.
    '''
    await call.answer() # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å '–∑–∞–ª–∏–ø–∞–Ω–∏—è' –∫–Ω–æ–ø–∫–∏
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–∑ callback_data
    product_id = call.data.split(':', 1)[1]

    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
        product = product_service.get_full_product(product_id)
        if not product:
            await call.message.edit_text('‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            return
        
        text = format_product_message(product)
         # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º
        kb = build_product_actions_keyboard(product_id=product['id'], product_link=product['link'])

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ
        await call.message.edit_text(
            text=text,
            parse_mode='HTML',
            reply_markup=kb,
            disable_web_page_preview=False
        )

    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handle_product_button')
        await call.answer(f'–û—à–∏–±–∫–∞: {e}')

# 3Ô∏è‚É£ –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É
async def handle_update_price(call: CallbackQuery):
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.

    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É" –¥–ª—è —Ç–æ–≤–∞—Ä–∞.
    –û–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞–¥–µ—Ä–∂–µ–∫ –∏–ª–∏ "–∑–∞–ª–∏–ø–∞–Ω–∏—è" –∫–Ω–æ–ø–∫–∏.
    - –ò–∑–≤–ª–µ–∫–∞–µ—Ç ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ callback_data –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.
    - –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω—ã –∏–ª–∏ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - call (CallbackQuery): –î–∞–Ω–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ –∏ ID —Ç–æ–≤–∞—Ä–∞.

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω—ã –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞,
      –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–æ–≤–∞—Ä—É.
    '''
    product_id = call.data.split(':', 1)[1]
    logger.debug(f'–í –∫–Ω–æ–ø–∫–µ –ø–æ–ª—É—á–µ–Ω {product_id}')
    logger.info(f'–ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {product_id}')

    # # –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å timeout
    # try:
    #     await call.answer('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É...')
    # except Exception as e:
    #     logger.warning(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback query: {e}')

    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É
        logger.info('–í—ã–∑—ã–≤–∞–µ–º service.update_product_price')
        updated_product = product_service.update_product_price(product_id)
        logger.info(f'–ü–æ–ª—É—á–∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä: {type(updated_product)} - {updated_product}')

        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.info('–§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        # –£–ë–†–ê–õ–ò AWAIT —Ç–∞–∫ –∫–∞–∫ —Ñ—É–∫–Ω—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
        new_text = format_product_message(updated_product)
        logger.info(f'–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {new_text}')

        new_markup = build_product_actions_keyboard(product_id, updated_product['link'])
        logger.info('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        current_text = call.message.text
        current_markup = call.message.reply_markup

        if new_text != current_text or new_markup != current_markup:
            logger.info('–û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏')
            await call.message.edit_text(
                text=new_text,
                parse_mode='HTML',
                reply_markup=new_markup,
                disable_web_page_preview=False
            )
            logger.info('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
        else:
            logger.info('–î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.')
        
    except Exception as e:
        logger.exception('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω—ã')
        
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        try:
            kb = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=f'product:{product_id}')]
                ]
            )

            await call.message.edit_text(
                f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω—ã: {e}',
                reply_markup=kb
            )
        except Exception as edit_error:
                logger.exception('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π')   

    