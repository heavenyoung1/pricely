import logging
from typing import TYPE_CHECKING, Optional

from src.application.interfaces.repositories import UserRepository
from src.infrastructure.database.mappers import UserMapper
from src.infrastructure.database.models import ORMUser

from sqlalchemy.orm import Session

logger = logging.getLogger(__name__)

if TYPE_CHECKING:
    from src.domain.entities import User

class UserRepositoryImpl(UserRepository):
    '''–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'''

    def __init__(self, session: Session):
        '''
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.

        :param session: –≠–∫–∑–µ–º–ø–ª—è—Ä SQLAlchemy Session –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
        '''
        self.session = session

    def save(self, user) -> None:
        '''
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

        :param user: –û–±—ä–µ–∫—Ç —Ç–∏–ø–∞ User, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å.
        '''
        try:
            # –ü—Ä–µ–∂–¥–µ —á–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
            existing_user = self.session.query(ORMUser).filter(ORMUser.id == user.id).first()

            if existing_user:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º merge –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.')
                self.session.merge(UserMapper.domain_to_orm(user))  # –û–±–Ω–æ–≤–ª—è–µ–º
            else:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ
                logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
                self.session.add(UserMapper.domain_to_orm(user))  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            logger.info(f'üíæ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω')
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user}: {str(e)}')
            raise

    def get(self, user_id: str) -> Optional['User']:
        '''
        –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.

        :param user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        :return: –û–±—ä–µ–∫—Ç User, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ None.
        '''
        try:
            orm_user = self.session.get(ORMUser, user_id)
            if orm_user:
                user = UserMapper.orm_to_domain(orm_user)
                logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–µ–Ω –ø–æ id: {user_id}')
                return user
            logger.warning(f'‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return None
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id {user_id}: {str(e)}')
            raise

    def delete(self, user_id: str) -> None:
        '''
        –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.

        :param user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
        :raises Exception: –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        '''
        logger.info(f'–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {user_id}')
        try:
            orm_user = self.session.get(ORMUser, user_id)
            if not orm_user:
                logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                return
            self.session.delete(orm_user)
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {user_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id {user_id}: {str(e)}')
            raise