# src/infrastructure/notifications/notification_service.py
import logging
from src.presentation.bot.utils.keyboard import build_product_actions_keyboard
from src.presentation.bot.handlers.products import _build_price_update_message
from aiogram.exceptions import TelegramAPIError, TelegramBadRequest
import asyncio

logger = logging.getLogger(__name__)

class NotificationService:
    def __init__(self, bot):
        self.bot = bot

    async def notify_price_change(self, chat_id: str, updated_product: dict):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Ü–µ–Ω–∞.
        """
        try:
            logger.info(f"üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            logger.info(f"üì¶ updated_product = {updated_product}")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            text = f"–¶–µ–Ω–∞ –Ω–∞ —Ç–æ–≤–∞—Ä '{updated_product['name']}' –∏–∑–º–µ–Ω–∏–ª–∞—Å—å!\n" \
                   f"–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {updated_product['latest_price']['previous_price_with_card']}\n" \
                   f"–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {updated_product['latest_price']['with_card']}\n" \
                   f"–°—Å—ã–ª–∫–∞: {updated_product['link']}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await self.bot.send_message(
                chat_id=str(chat_id),
                text=text,
                parse_mode="HTML"
            )

            logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id} –ø–æ —Ç–æ–≤–∞—Ä—É {updated_product['id']}")

        except TelegramBadRequest as e:
            # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            logger.warning(f"‚ö†Ô∏è TelegramBadRequest –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e}")
        except TelegramAPIError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ {chat_id}: {e}")
        except Exception as e:
            logger.exception(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {chat_id}: {e}")